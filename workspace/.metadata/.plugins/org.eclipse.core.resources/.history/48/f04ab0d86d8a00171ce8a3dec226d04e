
import java.io.IOException;
import java.io.InputStream;

import javax.net.ssl.HttpsURLConnection;

import org.apache.commons.lang3.StringUtils;

public class MyClass {
	

		 
	
	/*private static SSLSocketFactory buildSslSocketFactory() {
		// Add support for self-signed (local) SSL certificates
		// Based on http://developer.android.com/training/articles/security-ssl.html#UnknownCa
		SSLContext context = SSLContext.getInstance("TLS");
		try {
		  
			// Load CAs from an InputStream
			// (could be from a resource or ByteArrayInputStream or ...)
			CertificateFactory cf = CertificateFactory.getInstance("X.509");
			// From https://www.washington.edu/itconnect/security/ca/load-der.crt
			InputStream is = context.getResources().getAssets().openAsset("somefolder/somecertificate.crt");
			InputStream caInput = new BufferedInputStream(is);
			Certificate ca;
			try {
				ca = cf.generateCertificate(caInput);
				// System.out.println("ca=" + ((X509Certificate) ca).getSubjectDN());
			} finally {
				caInput.close();
			}

			// Create a KeyStore containing our trusted CAs
			String keyStoreType = KeyStore.getDefaultType();
			KeyStore keyStore = KeyStore.getInstance(keyStoreType);
			keyStore.load(null, null);
			keyStore.setCertificateEntry("ca", ca);

			// Create a TrustManager that trusts the CAs in our KeyStore
			String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();
			TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);
			tmf.init(keyStore);

			// Create an SSLContext that uses our TrustManager
			
			context.init(null, tmf.getTrustManagers(), null);
			return context.getSocketFactory();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		} catch (KeyStoreException e) {
			e.printStackTrace();
		} catch (KeyManagementException e) {
			e.printStackTrace();
		} catch (CertificateException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
		
	}*/
	
	public static String receiveResponse(HttpsURLConnection conn)
		      throws IOException {
		    conn.setConnectTimeout(10000);
		    conn.setReadTimeout(10000);
		    // retrieve the response from server
		    InputStream is = null;
		    try {
		      is = conn.getInputStream();
		      int ch;
		      StringBuffer sb = new StringBuffer();
		      while ((ch = is.read()) != -1) {
		        sb.append((char) ch);
		      }
		      return sb.toString();
		    } catch (IOException e) {
		      throw e;
		    } finally {
		      if (is != null) {
		        is.close();
		      }
		    }
		  }
	
	
	public static void main(String a[]) {
		
		String me = "a_b_c_d";
		 
		 
		
		System.out.println(StringUtils.substringAfterLast(me, "_").toUpperCase());
		
		
		
	/*	
		 HttpClient httpclient = new HttpClient();
		  GetMethod httpget = new GetMethod("https://apis-staging.rfksrv.com/search-rec/11250-154004989/3?data=%7B%22widget_id%22:%7B%22id%22:%2231%22%7D,%22content%22:%7B%22product%22:%7B%22field%22:%7B%22value%22:%5B%22sku%22,%22title%22%5D%7D%7D%7D,%22n_item%22:16,%22context%22:%7B%22page%22:%7B%22sku%22:%5B%22664975%22%5D%7D,%22user%22:%7B%22uuid%22:%22abc-test%22%7D%7D%7D");
		  httpget.addRequestHeader("x-api-key", "00-154004989-b3Fkz2HRl2uRRmz0W1H0svrbgYPbKnEfT8S52jAeZ0DNVo9u"); 
		  
		  try { 
		    try {
				httpclient.executeMethod(httpget);
				
				try {
					JSONObject resultJSON = new JSONObject(httpget.getResponseBodyAsString());
					 
					
					StringBuilder sb = new StringBuilder();
					sb.append(resultJSON.get("widget_title"));
					JSONArray jsr = resultJSON.getJSONObject("content").getJSONObject("product").getJSONArray("value");
					sb.append("|");
					for (int i = 0; i < jsr.length(); i++) {
						sb.append(((JSONObject)jsr.get(i)).getString("sku")).append(",");
					}
					String op  = sb.toString().substring(0, sb.length()-1);
				 
					System.out.println(op.split("\\|")[0]);
					System.out.println(op.split("\\|")[1]);
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			} catch (HttpException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		    System.out.println(httpget.getStatusLine());
		  } finally {
		    httpget.releaseConnection();
		  }*/
		
	/*	HttpsURLConnection connection;
		try {
			connection = (HttpsURLConnection) new URL("https://apis.rfksrv.com/search-rec/11250-154004989/3?data=%7B%22widget_id%22%3A%20%7B%22id%22%3A%20%2231%22%7D%2C%22content%22%3A%20%7B%22product%22%3A%20%7B%22field%22%3A%20%7B%22value%22%3A%20%5B%22sku%22%2C%20%22title%22%5D%7D%7D%7D%2C%22n_item%22%3A%2016%2C%22context%22%3A%20%7B%22page%22%3A%20%7B%22sku%22%3A%5B%5D%2C%22uri%22%3A%20%22%2Ftsc%2F%22%7D%2C%22user%22%3A%20%7B%20%22uuid%22%3A%20%22154004989-ig69x6sd538jxgfebzaa%22%7D%7D%7D").openConnection();
			connection.setRequestProperty("x-api-key", "00-154004989-H+PtB961c0iQWgAq3q+d8NjH21JJR6lRPH0IEROzsm3FV03x");
			System.out.println(connection.getResponseCode());
			if (connection.getResponseCode() <= 400) {
				
			    System.out.println(receiveResponse(connection));
			} else {
			     
			  System.out.println("Error");
			}
			 
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}*/
			
		/*HttpClient ct = new DefaultHttpClient();
		String data = "";
		
		 HttpGet request = new HttpGet("https://apis.rfksrv.com/search-rec/11250-154004989/3?data=%7B%22widget_id%22%3A%20%7B%22id%22%3A%20%2231%22%7D%2C%22content%22%3A%20%7B%22product%22%3A%20%7B%22field%22%3A%20%7B%22value%22%3A%20%5B%22sku%22%2C%20%22title%22%5D%7D%7D%7D%2C%22n_item%22%3A%2016%2C%22context%22%3A%20%7B%22page%22%3A%20%7B%22sku%22%3A%5B%5D%2C%22uri%22%3A%20%22%2Ftsc%2F%22%7D%2C%22user%22%3A%20%7B%20%22uuid%22%3A%20%22154004989-ig69x6sd538jxgfebzaa%22%7D%7D%7D");
			 request.addHeader("x-api-key", "00-154004989-b3Fkz2HRl2uRRmz0W1H0svrbgYPbKnEfT8S52jAeZ0DNVo9u");
			 request.addHeader("Cache-Control","no-cache");
			 try {
				ct.execute(request);
			} catch (ClientProtocolException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}*/

	
	}
	
}
